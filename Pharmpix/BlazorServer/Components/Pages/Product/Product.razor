@page "/products"
@using BlazorServer.Models
@using BlazorServer.ViewModels
@using Microsoft.AspNetCore.Components.Forms

<PageTitle>Product Form</PageTitle>

<h3>Product Form</h3>

<EditForm Model="@Model" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="name" class="form-label">Name</label>
        <InputText id="name" class="form-control" @bind-Value="Model.Name" />
        <ValidationMessage For="@(() => Model.Name)" />
    </div>

    <div class="mb-3">
        <label for="price" class="form-label">Price</label>
        <InputNumber id="price" class="form-control" @bind-Value="Model.Price" />
        <ValidationMessage For="@(() => Model.Price)" />
    </div>

    <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <InputTextArea id="description" class="form-control" @bind-Value="Model.Description" />
        <ValidationMessage For="@(() => Model.Description)" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

<h3>Product List</h3>

@if (products.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>@product.Price</td>
                    <td>@product.Description</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No products added yet.</p>
}


@code {

    private ProductVm Model = new ProductVm();
    private List<ProductVm> products = new List<ProductVm>();

    private async void HandleValidSubmit()
    {
        products.Add(new ProductVm
            {
                Name = Model.Name,
                Price = Model.Price,
                Description = Model.Description
        });

        Model = new ProductVm();
    }
}