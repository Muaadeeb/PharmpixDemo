@page "/weather"
@page "/weather-demo"

@using BlazorServer.Models
@using BlazorServer.Services.Interfaces
@using BlazorServer.ViewModels

@inject IWeatherService WeatherService


<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data.</p>

@if (Model == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th aria-label="Temperature in Celsius">Temp. (C)</th>
                <th aria-label="Temperature in Farenheit">Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Date.ToShortDateString()</td>
                    <td>@item.TemperatureC</td>
                    <td>@item.TemperatureF</td>
                    <td>@item.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<WeatherForecastVm> Model = [];

    protected override async Task OnInitializedAsync()
    {
        ResultsMapper(await WeatherService.GetAsync());
        
        StateHasChanged();
    }

    private void ResultsMapper(List<WeatherForecast> data)
    {
        foreach (var item in data)
        {
            Model.Add(new WeatherForecastVm
                {
                    Date = item.Date,
                    TemperatureC = item.TemperatureC,
                    Summary = item.Summary
                });
        }

        // Model.Clear();
    }
}